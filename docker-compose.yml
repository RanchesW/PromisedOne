version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: kazrpg-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: kazrpg
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - kazrpg-network

  # Redis for Session Storage
  redis:
    image: redis:7-alpine
    container_name: kazrpg-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kazrpg-network

  # Backend API Server
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: kazrpg-api
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/kazrpg?authSource=admin
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - kazrpg-network

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: kazrpg-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_key
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - kazrpg-network

volumes:
  mongodb_data:
  redis_data:

networks:
  kazrpg-network:
    driver: bridge
